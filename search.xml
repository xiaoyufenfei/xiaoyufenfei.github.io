<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深度学习GPU环境搭建</title>
      <link href="/2019/08/26/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0GPU%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/08/26/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0GPU%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>为了加速神经网络的训练，使用CPU训练速度很慢，所以使用cuda和cudnn对神经网络进行加速，在配置的过程中你会遇到很多坑，各种坑，网上也有很多教程但是实现起来各种ERROR，真心觉得累，经过多次实验做如下超全总结！！！</p></blockquote><h4 id="本节详细说明一下深度学习环境配置，深度学习GPU环境搭建全家桶"><a href="#本节详细说明一下深度学习环境配置，深度学习GPU环境搭建全家桶" class="headerlink" title="本节详细说明一下深度学习环境配置，深度学习GPU环境搭建全家桶"></a>本节详细说明一下深度学习环境配置，深度学习GPU环境搭建全家桶</h4><a id="more"></a> <h4 id="Python-3-6"><a href="#Python-3-6" class="headerlink" title="Python 3.6"></a>Python 3.6</h4><p>首先安装 Python 3.6，这里使用 Anaconda 3 来安装，下载地址：<a href="https://www.anaconda.com/download/#linux，点击" target="_blank" rel="noopener">https://www.anaconda.com/download/#linux，点击</a> Download 按钮下载即可，这里下载的是 Anaconda 3-5.1 版本，如果下载速度过慢,强烈建议选择使用<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">清华镜像</a> 。</p><p>下载下来之后目录下会出现一个 Anaconda3-5.1.0-Linux-x86_64.sh 文件，然后直接执行即可安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash Anaconda3-5.1.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>执行完毕之后按照默认设置走下来即可完成安装。</p><p>这里默认它会安装到用户目录下，如果想全局安装，可以在这一步输入你要安装的地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Anaconda3 will now be installed into this location:</span><br><span class="line">/home/wy/anaconda3</span><br><span class="line"> </span><br><span class="line">  - Press ENTER to confirm the location</span><br><span class="line">  - Press CTRL-C to abort the installation</span><br><span class="line">  - Or specify a different location below</span><br><span class="line"> </span><br><span class="line">[/home/wy/anaconda3] &gt;&gt;&gt; /usr/<span class="built_in">local</span>/anaconda3</span><br><span class="line">PREFIX=/usr/<span class="built_in">local</span>/anaconda3</span><br></pre></td></tr></table></figure><p>这里我指定了将其安装到 /usr/local/anaconda3 目录下，全局安装，所有用户共享，当然如果只想本用户使用的话使用默认配置即可。</p><p>安装完成之后添加 python3 和 pip3 的软链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/anaconda3/bin/python3 /usr/<span class="built_in">local</span>/sbin/python3</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/anaconda3/bin/pip /usr/<span class="built_in">local</span>/sbin/pip3</span><br></pre></td></tr></table></figure><p>这里是将软连接其添加到 /usr/local/sbin 目录下了，它默认会存在于环境变量中，因此可以直接调用。</p><p>当然也可以选择把 /usr/local/anaconda3/bin 目录添加到环境变量中，可以修改 ~/.bashrc 文件，添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/anaconda3/bin<span class="variable">$&#123;PATH:+:$&#123;PATH&#125;</span>&#125;</span><br></pre></td></tr></table></figure><p>然后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>即可生效，下次登录时也会默认执行 ~/.bashrc 文件，也会生效。</p><p>接下来我们验证下 python3、pip3 命令是否都来自 Anaconda，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 -V</span><br><span class="line">pip 9.0.1 from /usr/<span class="built_in">local</span>/anaconda3/lib/python3.6/site-packages (python 3.6)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> python3</span><br><span class="line">/usr/<span class="built_in">local</span>/anaconda3/bin/python3</span><br><span class="line">python3</span><br><span class="line">Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) </span><br><span class="line">[GCC 7.2.0] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>如果输入 pip3 和 python3 命令能出现如上类似结果，路径都在 /usr/local/anaconda3，就证明 Python 3 安装成功了。</p><h4 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h4><p>首先查看一下自己的电脑需要怎样的驱动，我们可以先到 <a href="http://www.nvidia.com/Download/index.aspx" target="_blank" rel="noopener">http://www.nvidia.com/Download/index.aspx</a> 查询下我们需要的是怎样的驱动，这里我的显卡是 GTX 1080，所以以此为例说明，勾选好对应的配置：</p><p>点击 Search，可以看到查询结果如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Version:    390.25</span><br><span class="line">Release Date:    2018.1.29</span><br><span class="line">Operating System:    Linux 64-bit</span><br><span class="line">Language:    English (US)</span><br><span class="line">File Size:    77.48 MB</span><br></pre></td></tr></table></figure><p>这里说明我们需要的版本是 <code>390.25</code>。</p><p>接下来如果我们之前安装了驱动的话，可以重新安装一下，如果当前已经安装好了就不必了。</p><p>如果要重装，需要首先卸载掉之前的显卡驱动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove –purge nvidia*</span><br></pre></td></tr></table></figure><p>运行之后 NVIDIA 的一些驱动就被卸载了。</p><p>这时候 nvidia-smi 等命令已经不能用了，这就证明显卡驱动已经被卸载了。</p><p>然后接下来添加一个 PPA 源，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa</span><br></pre></td></tr></table></figure><p>然后更新一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>随后重新安装显卡驱动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nvidia-390</span><br></pre></td></tr></table></figure><p>注意这里的 <code>390</code> 就是刚才我们查询出来的版本，以实际查询出来的版本为准。</p><h4 id="CUDA-9-0"><a href="#CUDA-9-0" class="headerlink" title="CUDA 9.0"></a>CUDA 9.0</h4><p>如果存在之前的旧版本，可以选择先卸载，以免和新的 CUDA 版本产生冲突，在 /usr/local/cuda/bin 目录下有一个 uninstallcuda*.pl 文件，可以直接运行卸载，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./uninstall_cuda_*.pl</span><br></pre></td></tr></table></figure><p>这样即可将 CUDA 全部卸载。</p><p>接下来我们再下载 CUDA 9.0，注意 TensorFlow 1.5 和 1.6 版本依然只是兼容 CUDA 9.0，没有兼容 CUDA 9.1，所以不要下载 9.1，CUDA 9.0 的下载地址是：<a href="https://developer.nvidia.com/cuda-90-download-archive，然后依次勾选好系统的版本" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-90-download-archive，然后依次勾选好系统的版本</a>.</p><p>这里我们选择 Linux-x86_64-Ubuntu-16.04-runfile 的配置，然后点击 Base Installer 部分的 Download 按钮，下载 CUDA 9.0 安装包。</p><p>对应的下载命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_384.81_linux-run</span><br></pre></td></tr></table></figure><p>执行此命令，等待下载完成即可。</p><p>接下来执行安装，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash cuda_9.0.176_384.81_linux-run</span><br></pre></td></tr></table></figure><p>安装过程需要输入一些确认选项，过程如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Description</span><br><span class="line"> </span><br><span class="line">The NVIDIA CUDA Toolkit provides <span class="built_in">command</span>-line and graphical</span><br><span class="line">tools <span class="keyword">for</span> building, debugging and optimizing the performance</span><br><span class="line">Do you accept the previously <span class="built_in">read</span> EULA?</span><br><span class="line">accept/decline/quit: accept</span><br><span class="line"> </span><br><span class="line">Install NVIDIA Accelerated Graphics Driver <span class="keyword">for</span> Linux-x86_64 384.81?</span><br><span class="line">(y)es/(n)o/(q)uit: n</span><br><span class="line"> </span><br><span class="line">Install the CUDA 9.0 Toolkit?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"> </span><br><span class="line">Enter Toolkit Location</span><br><span class="line"> [ default is /usr/<span class="built_in">local</span>/cuda-9.0 ]: </span><br><span class="line"> </span><br><span class="line">Do you want to install a symbolic link at /usr/<span class="built_in">local</span>/cuda?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"> </span><br><span class="line">Install the CUDA 9.0 Samples?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"> </span><br><span class="line">Enter CUDA Samples Location</span><br><span class="line"> [ default is /home/cqc ]: </span><br><span class="line"> </span><br><span class="line">Installing the CUDA Toolkit <span class="keyword">in</span> /usr/<span class="built_in">local</span>/cuda-9.0 ...</span><br></pre></td></tr></table></figure><p>最后如果出现这样的提示，就证明 CUDA 安装好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Driver:   Not Selected</span><br><span class="line">Toolkit:  Installed <span class="keyword">in</span> /usr/<span class="built_in">local</span>/cuda-9.0</span><br><span class="line">Samples:  Installed <span class="keyword">in</span> /home/cqc, but missing recommended libraries</span><br><span class="line"> </span><br><span class="line">Please make sure that</span><br><span class="line"> -   PATH includes /usr/<span class="built_in">local</span>/cuda-9.0/bin</span><br><span class="line"> -   LD_LIBRARY_PATH includes /usr/<span class="built_in">local</span>/cuda-9.0/lib64, or, add /usr/<span class="built_in">local</span>/cuda-9.0/lib64 to /etc/ld.so.conf and run ldconfig as root</span><br><span class="line"> </span><br><span class="line">To uninstall the CUDA Toolkit, run the uninstall script <span class="keyword">in</span> /usr/<span class="built_in">local</span>/cuda-9.0/bin</span><br><span class="line"> </span><br><span class="line">Please see CUDA_Installation_Guide_Linux.pdf <span class="keyword">in</span> /usr/<span class="built_in">local</span>/cuda-9.0/doc/pdf <span class="keyword">for</span> detailed information on setting up CUDA.</span><br><span class="line"> </span><br><span class="line">***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least 384.00 is required <span class="keyword">for</span> CUDA 9.0 functionality to work.</span><br><span class="line">To install the driver using this installer, run the following <span class="built_in">command</span>, replacing &lt;CudaInstaller&gt; with the name of this run file:</span><br><span class="line">    sudo &lt;CudaInstaller&gt;.run -silent -driver</span><br></pre></td></tr></table></figure><p>然后我们需要配置一下环境变量，更改 ~/.bashrc 文件，添加如下几行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/cuda/bin<span class="variable">$&#123;PATH:+:$&#123;PATH&#125;</span>&#125;</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/cuda/lib64<span class="variable">$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;</span>&#125;</span><br><span class="line"><span class="built_in">export</span> CUDA_HOME=/usr/<span class="built_in">local</span>/cuda</span><br></pre></td></tr></table></figure><p>修改完毕之后执行一下使其生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>这时我们输出 CUDA_HOME、LD_LIBRARY_PATH 就可以看到对应的输出了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$CUDA_HOME</span></span><br><span class="line">/usr/<span class="built_in">local</span>/cuda</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line">/usr/<span class="built_in">local</span>/cuda/lib64</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>这样就代表环境变量生效了，CUDA 安装完成。</p><h4 id="cuDNN-7-1"><a href="#cuDNN-7-1" class="headerlink" title="cuDNN 7.1"></a>cuDNN 7.1</h4><p>cuDNN 的全称是 The NVIDIA CUDA® Deep Neural Network library，是专门用来对深度学习加速的库，它支持 Caffe2, MATLAB, Microsoft Cognitive Toolkit, TensorFlow, Theano 及 PyTorch 等深度学习的加速优化，目前最新版本是 cuDNN 7.1，接下来我们来看下它的安装方式。</p><p>下载链接：<a href="https://developer.nvidia.com/rdp/cudnn-download，或者" target="_blank" rel="noopener">https://developer.nvidia.com/rdp/cudnn-download，或者</a> <a href="http://iphil.cc/?p=541" target="_blank" rel="noopener">cuDNN Download</a>   需要注册之后才能打开，这里我们选择 cuDNN v7.1.1 (Feb 28, 2018), for CUDA 9.0，然后选择 cuDNN v7.1.1 Library for Linux：</p><p>下载下来之后解压安装即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf cudnn-9.0-linux-x64-v7.1.tgz</span><br><span class="line">sudo cp cuda/include/cudnn.h /usr/<span class="built_in">local</span>/cuda/include/</span><br><span class="line">sudo cp cuda/lib64/libcudnn* /usr/<span class="built_in">local</span>/cuda/lib64/ -d</span><br><span class="line">sudo chmod a+r /usr/<span class="built_in">local</span>/cuda/include/cudnn.h</span><br><span class="line">sudo chmod a+r /usr/<span class="built_in">local</span>/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure><p>执行完如上命令之后，cuDNN 就安装好了，这时我们可以发现在 /usr/local/cuda/include 目录下就多了 cudnn.h 头文件。</p><h4 id="ubuntu16-04查看CUDA和cuDNN版本"><a href="#ubuntu16-04查看CUDA和cuDNN版本" class="headerlink" title="ubuntu16.04查看CUDA和cuDNN版本"></a>ubuntu16.04查看CUDA和cuDNN版本</h4><p>cuda版本查看:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/<span class="built_in">local</span>/cuda/version.txt</span><br></pre></td></tr></table></figure><p>cudnn版本查看:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/<span class="built_in">local</span>/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure><h4 id="TensorFlow-1-8"><a href="#TensorFlow-1-8" class="headerlink" title="TensorFlow 1.8"></a>TensorFlow 1.8</h4><p>到现在为止 Python 3.6、CUDA 9.0 和 cuDNN 7.1 就已经安装好了，而且环境变量也配置好了，接下来我们直接安装 TensorFlow 1.8 即可，TensorFlow 1.8 版本针对 CUDA 9 和 cuDNN 7 做了优化，可以预构建二进制文件。</p><p>这里需要安装的是 TensorFlow 的 GPU 版本，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install tensorflow-gpu==1.8.0</span><br></pre></td></tr></table></figure><p>你会发现上面安装特别慢，强烈建议使用 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener">国内pypi源加速</a> , 速度超快啊！！！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install tensorflow-gpu==1.8.0 -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>安装完成之后验证一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">tf.__version__</span><br><span class="line">tf.__path__</span><br></pre></td></tr></table></figure><p>如果没有报错，那就证明全部环境配置都成功了。</p><p>如果您的tensorflow安装后不能使用，请考虑tensorflow版本和CUDA、cuDNN版本的兼容问题，请自行百度。</p><h4 id="Pytorch-1-1"><a href="#Pytorch-1-1" class="headerlink" title="Pytorch 1.1"></a>Pytorch 1.1</h4><p>pytorch官网：<a href="https://pytorch.org/" target="_blank" rel="noopener">https://pytorch.org/</a> </p><p>打开官网，可以按照选择安装方式（pip , conda, source）和 python版本，cuda版本来进行安装，由于特殊的网络国情，一般是打不开，或者是无法查看 run the command 之后的指令的。</p><p>你会发现上面安装特别慢，强烈建议使用 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener">国内pypi源加速</a> , 速度超快啊！！！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install torch==1.1.0 torchvision==0.3.0 -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p><a href="https://www.pytorchtutorial.com/pytorch-installation-commands/" target="_blank" rel="noopener">安装pytorch命令合集</a>.</p><h4 id="配置-ssh-远程连接"><a href="#配置-ssh-远程连接" class="headerlink" title="配置 ssh 远程连接"></a>配置 ssh 远程连接</h4><p>1）安装 open-ssh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>2）修改权限，允许 ssh 登录 root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>注释 ：<code>PermitRootLogin prohibit-password</code><br>添加： <code>PermitRootLogin yes</code></p><p>3）重启 ssh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><h4 id="设置Ubuntu-16-04-允许进行远程控制"><a href="#设置Ubuntu-16-04-允许进行远程控制" class="headerlink" title="设置Ubuntu 16.04 允许进行远程控制"></a>设置Ubuntu 16.04 允许进行远程控制</h4><p>请参考 <a href="https://www.cnblogs.com/xuliangxing/p/7642650.html" target="_blank" rel="noopener">VNC实现Windows远程访问Ubuntu 16.04（无需安装第三方桌面,直接使用自带远程工具）</a> .</p><h4 id="Windows全能终端神器MobaXterm安装"><a href="#Windows全能终端神器MobaXterm安装" class="headerlink" title="Windows全能终端神器MobaXterm安装"></a>Windows全能终端神器MobaXterm安装</h4><p><a href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener">主要功能</a>：</p><blockquote><p>支持各种连接SSH，X11，RDP，VNC，FTP，MOSH<br>支持Unix命令（bash，ls，cat，sed，grep，awk，rsync，…）<br>连接SSH终端后支持SFTP传输文件<br>各种丰富的插件（git/dig/aria2…）<br>可运行Windows或软件</p></blockquote><p><a href="https://mobaxterm.mobatek.net/download-home-edition.html" target="_blank" rel="noopener">官网下载地址</a> </p><h4 id="No-module-named-‘cv2’等python库解决方法"><a href="#No-module-named-‘cv2’等python库解决方法" class="headerlink" title="No module named ‘cv2’等python库解决方法"></a>No module named ‘cv2’等python库解决方法</h4><p>只要是缺少的python库文件，请善用 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener">国内pypi源加速</a> , 速度超快啊！！！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install opencv-python -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h4 id="Python包更新方法"><a href="#Python包更新方法" class="headerlink" title="Python包更新方法"></a>Python包更新方法</h4><p>当你需要更新python包时，还是那句话，请善用 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener">国内pypi源加速</a> , 速度超快啊！！！</p><p>如：我当前需要更新pip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h4 id="Ubuntu下python开发IDE专业版Pycharm的安装"><a href="#Ubuntu下python开发IDE专业版Pycharm的安装" class="headerlink" title="Ubuntu下python开发IDE专业版Pycharm的安装"></a>Ubuntu下python开发IDE专业版Pycharm的安装</h4><p>请自行百度，可参考 <a href="https://blog.csdn.net/CAU_Ayao/article/details/80578600" target="_blank" rel="noopener">https://blog.csdn.net/CAU_Ayao/article/details/80578600</a> 进行安装。</p><h4 id="Ubuntu下Markdown编辑器Typora的安装"><a href="#Ubuntu下Markdown编辑器Typora的安装" class="headerlink" title="Ubuntu下Markdown编辑器Typora的安装"></a>Ubuntu下Markdown编辑器Typora的安装</h4><blockquote><p>一个优雅的markdown编辑器，支持mac，windows，linux全平台，是一款<strong>支持实时预览的 Markdown 文本编辑器 ，完全免费</strong>。</p></blockquote><p><a href="https://www.typora.io/" target="_blank" rel="noopener">官方下载地址</a>     |         <a href="https://blog.csdn.net/cris_zz/article/details/82919401" target="_blank" rel="noopener">史上最完美的 Typora 教程</a></p><h4 id="TeamViewer-远程控制桌面工具安装"><a href="#TeamViewer-远程控制桌面工具安装" class="headerlink" title="TeamViewer 远程控制桌面工具安装"></a>TeamViewer 远程控制桌面工具安装</h4><p><a href="https://www.teamviewer.cn/cn/" target="_blank" rel="noopener">TeamViewer</a>主要是用来连实验室的电脑，也可以用用 <a href="https://anydesk.com/zhs" target="_blank" rel="noopener">AnyDesk</a>, 两个都是全平台的.</p><p>以上便是 <code>Ubuntu 16.04 + Nvidia GTX 1080 + Python 3.6 + CUDA 9.0 + cuDNN 7.1 + TensorFlow 1.8 + Pytorch 1.1 + ssh远程连接设置+ Ubunt桌面远程控制</code>等 完整环境配置过程,  <strong>RTX 2080</strong>显卡的环境安装过程也可同作参考。</p><h4 id="国内常见的pypi源"><a href="#国内常见的pypi源" class="headerlink" title="国内常见的pypi源"></a>国内常见的pypi源</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">清华：<span class="string">https:</span><span class="comment">//pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class="line">阿里云：<span class="string">http:</span><span class="comment">//mirrors.aliyun.com/pypi/simple/</span></span><br><span class="line">中国科技大学 <span class="string">https:</span><span class="comment">//pypi.mirrors.ustc.edu.cn/simple/</span></span><br><span class="line">华中理工大学：<span class="string">http:</span><span class="comment">//pypi.hustunique.com/</span></span><br><span class="line">山东理工大学：<span class="string">http:</span><span class="comment">//pypi.sdutlinux.org/ </span></span><br><span class="line">豆瓣：<span class="string">http:</span><span class="comment">//pypi.douban.com/simple/</span></span><br></pre></td></tr></table></figure><h4 id="他山之石："><a href="#他山之石：" class="headerlink" title="他山之石："></a>他山之石：</h4><ul><li><a href="https://blog.csdn.net/weixin_42718092/article/details/86016973" target="_blank" rel="noopener">Ubuntu下安装CUDA10.0遇到的问题（一定要注意自己版本）</a></li><li><a href="https://blog.csdn.net/qq_27825451/article/details/89082978" target="_blank" rel="noopener">tensorflow各个版本的CUDA以及Cudnn版本对应关系</a></li><li><a href="https://blog.csdn.net/omodao1/article/details/83241074" target="_blank" rel="noopener">Tensorflow不同版本要求与CUDA及CUDNN版本对应关系</a></li><li><a href="https://blog.csdn.net/CYummy/article/details/88173161" target="_blank" rel="noopener">Ubuntu16.04　安装python3.6和相应的pip3  pytorch1.0</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客搭建指南</title>
      <link href="/2019/08/24/hello-world/"/>
      <url>/2019/08/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a> <h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><h4 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h4 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h4 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h4 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><p>Hexo的简洁、神秘让我跃跃欲试，在使用过程中遇到了很多问题，整理此文，一是方便其他技术人搭建自己的博客，二是给自己的学习之旅做个总结。</p><blockquote><p>Hexo 有两份主要的配置文件（_config.yml），一份位于站点根目录下，另一份位于主题目录下。为了描述方便，在以下说明中，将前者称为站点配置文件，后者称为主题配置文件。</p></blockquote><h3 id="1-Hexo介绍"><a href="#1-Hexo介绍" class="headerlink" title="1 Hexo介绍"></a>1 Hexo介绍</h3><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是基于<code>NodeJs</code>的静态博客框架，简单、轻量，其生成的静态网页可以托管在<code>Github</code>和<code>Heroku</code>上。</p><ul><li>超快速度</li><li>支持MarkDown</li><li>一键部署</li><li>丰富的插件</li></ul><blockquote><p>下面以我的博客为例，xiaoming.github.io</p></blockquote><h3 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2 环境准备"></a>2 环境准备</h3><h4 id="2-0-安装git"><a href="#2-0-安装git" class="headerlink" title="2.0 安装git"></a>2.0 安装git</h4><p>Git for Windows, 这里提供一个国内的下载站，方便网友下载，然后选择安装目录后，一直next就可以。<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">https://github.com/waylau/git-for-win</a></p><h4 id="2-1-安装node-js"><a href="#2-1-安装node-js" class="headerlink" title="2.1 安装node.js"></a>2.1 安装node.js</h4><p>去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs官网</a>下载对应系统的安装包，然后一直一直next安装。</p><p>检验安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><h4 id="2-2-安装hexo"><a href="#2-2-安装hexo" class="headerlink" title="2.2 安装hexo"></a>2.2 安装hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>注意：Mac系统，则需要  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="3-利用Hexo搭建一个博客"><a href="#3-利用Hexo搭建一个博客" class="headerlink" title="3 利用Hexo搭建一个博客"></a>3 利用Hexo搭建一个博客</h3><h4 id="3-1-创建博客目录xiaoming-github-io"><a href="#3-1-创建博客目录xiaoming-github-io" class="headerlink" title="3.1 创建博客目录xiaoming.github.io"></a>3.1 创建博客目录<code>xiaoming.github.io</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init xiaoming.github.io</span><br><span class="line">$ <span class="built_in">cd</span> xiaoming.github.io</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h4 id="3-2-生成静态页面"><a href="#3-2-生成静态页面" class="headerlink" title="3.2 生成静态页面"></a>3.2 生成静态页面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><blockquote><p>g 即generate</p></blockquote><h4 id="3-3-运行"><a href="#3-3-运行" class="headerlink" title="3.3 运行"></a>3.3 运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><blockquote><p>s 即server</p></blockquote><p>然后打开浏览器，输入地址 <strong>localhost:4000</strong> 即可看到效果</p><h3 id="4-发一篇文章试试"><a href="#4-发一篇文章试试" class="headerlink" title="4 发一篇文章试试"></a>4 发一篇文章试试</h3><h4 id="4-1-命令方式"><a href="#4-1-命令方式" class="headerlink" title="4.1 命令方式"></a>4.1 命令方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>此时会在<code>source/_posts</code>目录下生成<code>test.md</code>文件，输入些许内容，然后保存.</p><p>生成下，看看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>访问 <strong>localhost:4000</strong> 即可</p><h4 id="4-2-直接方式"><a href="#4-2-直接方式" class="headerlink" title="4.2 直接方式"></a>4.2 直接方式</h4><p>在 <strong>source/_posts/</strong>下新建一个<code>.md</code>文件也可</p><h3 id="5-配置"><a href="#5-配置" class="headerlink" title="5 配置"></a>5 配置</h3><p>网站的设置大部分都在<strong>_config.yml</strong>文件中，详细配置可以查看<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">官方文档</a></p><p>下面只列出简单常用配置</p><ul><li><strong>title</strong> -&gt; 网站标题</li><li><strong>subtitle</strong> -&gt; 网站副标题</li><li><strong>description</strong> -&gt; 网站描述</li><li><strong>author</strong> -&gt; 您的名字</li><li><strong>language</strong> -&gt; 网站使用的语言</li></ul><p>坑：<strong>进行配置时，需要在冒号:后加一个英文空格</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> xiaoming</span><br></pre></td></tr></table></figure><h3 id="6-换一个好看的主题"><a href="#6-换一个好看的主题" class="headerlink" title="6 换一个好看的主题"></a>6 换一个好看的主题</h3><p>Hexo 中有很多主题，可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官网</a>查看。<br>这里我推荐<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>，下面列举更换主题的一般套路：</p><h4 id="6-1-下载主题资源"><a href="#6-1-下载主题资源" class="headerlink" title="6.1 下载主题资源"></a>6.1 下载主题资源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line">克隆新地址：</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h4 id="6-2-应用下载的主题"><a href="#6-2-应用下载的主题" class="headerlink" title="6.2 应用下载的主题"></a>6.2 应用下载的主题</h4><p>在网站配置文件<strong>_config.yml</strong>中，配置<strong>theme</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: <span class="keyword">next</span></span><br></pre></td></tr></table></figure><blockquote><p>next是主题名称，具体的可查看主题的文档</p></blockquote><h4 id="6-3-主题其他配置"><a href="#6-3-主题其他配置" class="headerlink" title="6.3 主题其他配置"></a>6.3 主题其他配置</h4><p>可在<code>/theme/{theme}/_config.yml</code> 主题的配置文件下进行主题的配置。</p><p>接下来，可以执行万能的调试命令看看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g     <span class="comment">#g 是 generate 缩写:生成，d 是 deploy 缩写:部署</span></span><br><span class="line">$ hexo s     <span class="comment">#s 是 serverce 缩写:启动服务预览</span></span><br></pre></td></tr></table></figure><h3 id="7-部署到Github"><a href="#7-部署到Github" class="headerlink" title="7 部署到Github"></a>7 部署到Github</h3><h4 id="7-1-有个github账号xiaoming"><a href="#7-1-有个github账号xiaoming" class="headerlink" title="7.1 有个github账号xiaoming"></a>7.1 有个github账号xiaoming</h4><h4 id="7-2-创建一个xiaoming-github-io的public仓库"><a href="#7-2-创建一个xiaoming-github-io的public仓库" class="headerlink" title="7.2 创建一个xiaoming.github.io的public仓库"></a>7.2 创建一个xiaoming.github.io的public仓库</h4><p>如果您的账户名是xiaoming,则需要创建一个xiaoming.github.io的public仓库.</p><h4 id="7-3-安装-hexo-deployer-git"><a href="#7-3-安装-hexo-deployer-git" class="headerlink" title="7.3 安装 hexo-deployer-git"></a>7.3 安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="7-4-网站配置git"><a href="#7-4-网站配置git" class="headerlink" title="7.4 网站配置git"></a>7.4 网站配置git</h4><p>在网站的<code>_config.yml</code>中配置deploy</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> <span class="params">&lt;repository url&gt;</span></span><br><span class="line"><span class="symbol">  branch:</span> [branch]</span><br></pre></td></tr></table></figure><blockquote><p><code>branch</code>为分支，默认为<code>master</code>,可以不配置<br><code>repo</code>为仓库地址，在github上新建仓库后，可复制此地址</p></blockquote><h4 id="7-5-部署"><a href="#7-5-部署" class="headerlink" title="7.5 部署"></a>7.5 部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><blockquote><p>d 即deploy</p></blockquote><h3 id="8-贴标签，方便搜索"><a href="#8-贴标签，方便搜索" class="headerlink" title="8 贴标签，方便搜索"></a>8 贴标签，方便搜索</h3><h4 id="8-1-两个确认"><a href="#8-1-两个确认" class="headerlink" title="8.1 两个确认"></a>8.1 两个确认</h4><ul><li>确认站点配置文件有 </li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">tag_dir:</span> tags</span><br></pre></td></tr></table></figure><ul><li>确认主题配置文件有</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span> tags</span><br></pre></td></tr></table></figure><h4 id="8-2-新建tags页面"><a href="#8-2-新建tags页面" class="headerlink" title="8.2 新建tags页面"></a>8.2 新建tags页面</h4><p>1&gt;运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>此时会在<code>source/</code>下生成<code>tags/index.md</code>文件</p><p>2&gt;修改/source/tags目录下的<code>index.md</code>文件</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">title:</span> tags</span><br><span class="line"><span class="string">date:</span> <span class="number">2015</span><span class="number">-10</span><span class="number">-20</span> <span class="number">06</span>:<span class="number">49</span>:<span class="number">50</span></span><br><span class="line"><span class="string">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="string">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>date 可保持系统生成的时间，</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="string">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>很重要</p><p>3&gt;修改<strong>主题配置文件</strong><br>去掉tags的注释</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> /                       <span class="meta">#主页</span></span><br><span class="line"><span class="symbol">  categories:</span> /categories<span class="meta">#分类页（需手动创建）</span></span><br><span class="line">  <span class="meta">#about: /about#关于页面（需手动创建）</span></span><br><span class="line"><span class="symbol">  archives:</span> /archives<span class="meta">#归档页</span></span><br><span class="line"><span class="symbol">  tags:</span> /tags<span class="meta">#标签页（需手动创建）</span></span><br><span class="line">  <span class="meta">#commonweal: /404.html        #公益 404 （需手动创建）</span></span><br></pre></td></tr></table></figure><h4 id="8-3-在文章中添加tags"><a href="#8-3-在文章中添加tags" class="headerlink" title="8.3 在文章中添加tags"></a>8.3 在文章中添加tags</h4><p>在文章<code>xx.md</code>中添加：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tags:</span> </span><br><span class="line">- Tag1</span><br><span class="line">- Tag2</span><br><span class="line">- Tag3</span><br></pre></td></tr></table></figure><p>多个Tag可按上面的格式添加。</p><p>其文件头部类似：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: TagEditText</span><br><span class="line">date: 2016<span class="string">-11</span><span class="string">-19</span> 10:44:25</span><br><span class="line"><span class="keyword">tags:</span> </span><br><span class="line">- Tag1</span><br><span class="line">- Tag2</span><br><span class="line">- Tag3</span><br></pre></td></tr></table></figure><h3 id="9-分类，给文章归档"><a href="#9-分类，给文章归档" class="headerlink" title="9 分类，给文章归档"></a>9 分类，给文章归档</h3><h4 id="9-1-两个确认"><a href="#9-1-两个确认" class="headerlink" title="9.1 两个确认"></a>9.1 两个确认</h4><ul><li>确认站点配置文件打开了</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">category_dir:</span> categories</span><br></pre></td></tr></table></figure><ul><li>确认主题配置文件打开了</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">categories:</span> /categories</span><br></pre></td></tr></table></figure><h4 id="9-2-新建categories文件"><a href="#9-2-新建categories文件" class="headerlink" title="9.2 新建categories文件"></a>9.2 新建categories文件</h4><p>1&gt;运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>此时会在<code>source</code>目录下生成<code>categories/index.md</code>文件</p><p>2&gt;修改/source/categories目录下的<code>index.md</code>文件</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">title:</span> categories</span><br><span class="line"><span class="string">date:</span> <span class="number">2015</span><span class="number">-10</span><span class="number">-20</span> <span class="number">06</span>:<span class="number">49</span>:<span class="number">50</span></span><br><span class="line"><span class="string">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="string">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>date 可保持系统生成的时间，</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="string">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>很重要</p><p>3&gt;修改<strong>主题配置文件</strong><br>去掉categories的注释</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> /                       <span class="meta">#主页</span></span><br><span class="line"><span class="symbol">  categories:</span> /categories<span class="meta">#分类页（需手动创建）</span></span><br><span class="line">  <span class="meta">#about: /about#关于页面（需手动创建）</span></span><br><span class="line"><span class="symbol">  archives:</span> /archives<span class="meta">#归档页</span></span><br><span class="line"><span class="symbol">  tags:</span> /tags<span class="meta">#标签页（需手动创建）</span></span><br><span class="line">  <span class="meta">#commonweal: /404.html        #公益 404 （需手动创建）</span></span><br></pre></td></tr></table></figure><h4 id="9-3-在文章中添加categories"><a href="#9-3-在文章中添加categories" class="headerlink" title="9.3 在文章中添加categories"></a>9.3 在文章中添加categories</h4><p>在文章xx.md中添加：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">categories:</span> </span><br><span class="line">- cate</span><br></pre></td></tr></table></figure><p>其文件头部类似：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> TagEditText</span><br><span class="line"><span class="symbol">date:</span> <span class="number">2016</span><span class="number">-11</span><span class="number">-19</span> <span class="number">10</span>:<span class="number">44</span>:<span class="number">25</span></span><br><span class="line"><span class="symbol">categories:</span> </span><br><span class="line">- cate</span><br></pre></td></tr></table></figure><h4 id="10-hexo修改文章底部的那个带-号的标签"><a href="#10-hexo修改文章底部的那个带-号的标签" class="headerlink" title="10 hexo修改文章底部的那个带#号的标签"></a>10 hexo修改文章底部的那个带#号的标签</h4><p>实现效果图</p><p><img src="/2019/08/24/hello-world/bottom_tag.png" alt></p><p>具体实现方法:</p><p>修改模板 <code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code> 或者 <code>rel=&quot;tag&quot;&gt; </code>，将  # 或者    换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h4 id="11-Hexo文章置顶的方法"><a href="#11-Hexo文章置顶的方法" class="headerlink" title="11  Hexo文章置顶的方法"></a>11  Hexo文章置顶的方法</h4><p>1&gt; 安装插件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>然后在需要置顶的文章的Front-matter中加上top即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 2019</span><br><span class="line">date: 2019-02-14 16:10:03</span><br><span class="line">top: 1</span><br></pre></td></tr></table></figure><p>或者在需要置顶的文章的Front-matter中加上top: true亦可。比如下面这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: hexo博客置顶</span><br><span class="line">date: 2017-09-08 12:00:25</span><br><span class="line">categories: 博客搭建系列</span><br><span class="line">top: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>到目前为止，置顶功能已经可以实现了。</p><p>2&gt;设置置顶标志:</p><p>打开：/blog/themes/next/layout/_macro 目录下的post.swig文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，紧接着下一行插入如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">  &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">"博客名称"</span>  =&gt; hexo new <span class="string">"博客名称"</span>   <span class="comment">#这两个都是创建新文章，前者是简写模式</span></span><br><span class="line">$ hexo p  =&gt; hexo publish</span><br><span class="line">$ hexo g  =&gt; hexo generate  <span class="comment">#生成</span></span><br><span class="line">$ hexo s  =&gt; hexo server  <span class="comment">#启动服务预览</span></span><br><span class="line">$ hexo d  =&gt; hexo deploy  <span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">关于hexo的服务器命令:</span><br><span class="line">$ hexo server   <span class="comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span></span><br><span class="line">$ hexo server -s   <span class="comment">#静态模式</span></span><br><span class="line">$ hexo server -p 5000   <span class="comment">#更改端口</span></span><br><span class="line">$ hexo server -i 192.168.1.1   <span class="comment">#自定义IP</span></span><br><span class="line">$ hexo clean   <span class="comment">#清除缓存，网页正常情况下可以忽略此条命令</span></span><br><span class="line">$ hexo g   <span class="comment">#生成静态网页</span></span><br><span class="line">$ hexo d   <span class="comment">#开始部署</span></span><br><span class="line"></span><br><span class="line">hexo资料网站:</span><br><span class="line">https://hexo.io/zh-cn/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 - 创建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
